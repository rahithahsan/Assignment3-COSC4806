For  assignments, the expectation is at least 15 or 20 commits minimum. Every time you add or change functionality, you should be testing it. If it works, then you commit it. When you add a new page, test it, and commit it. New function, test it, and commit it. And so on...”

If commits are not done, a mark of 0 for the assignment
You need to make commits as you go. Not one big commit at the end. Every “feature” or “accomplishment” should have a commit with a description. Welcome to proper coding.
If the site is plagiarised or the code is identical to someone else, a mark of 0
Replits need to be shared with me (mikebio@gmail.com)
Note: Please give me full access when sharing your repl!
All database interactions must be done with PDO
When you submit an assignment, you must share your Replit with me (see above) and share your GitHub repository. Assignments still need to be submitted through the LMS. You can submit a .txt file with links to your replit and GitHub repository.
Don't forget, when you submit your assignment, submit both your GitHub repo link and your Replit link. Also, in all assignments, make sure you are providing me with a username/password to log in. 
Finally, make sure you are giving me FULL access to your Replit. I need to be able to edit and run the code. Do not just hit the share button, you need to invite me to the Replit. And make sure you are sharing wit the correct email address as per the assignment instructions!


Assignment 3
Use my example to implement MVC (MVC must be used going forward) 
Clone this: https://github.com/mikebiox/cosc-4806-3.git and delete the .git folder and initialize in your own repo
If you cannot see the .git folder, make sure to enable show hidden files
Move your code to appropriate php files (model, controllers, or view file)
Should have a login controller and a home controller, a user model, two views, and possibly more! 
When a user creates an account, it can be either done in a new controller (create) or use the login controller and a new function (create). It's up to you.
Create a log table in your database and log all login attempts (good and bad). You'll need to log username, attempt (good, bad), and time
Also, after 3 unsuccessful login attempts, lock the user out for 60 seconds (based on the time of the last failed attempt)
Implement basic CSS. In my example, bootstrap is being used but you can delete that and use whatever you want. It doesn't have to look great, just okay
Everything must be in MVC format. You'll only need to modify the controllers, views, and model files/folders. Nothing else. 

